apiVersion: apps/v1
kind: Deployment
metadata:
  name: sample-flask
  namespace: sample-app
  labels:
    app: sample-flask
spec:
  replicas: 2
  selector:
    matchLabels:
      app: sample-flask
  template:
    metadata:
      labels:
        app: sample-flask
    spec:
      containers:
        - name: app
          image: amirul135/sample-flask-metrics:1.0.0
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 8000
              name: http
          readinessProbe:
            httpGet:
              path: /healthz
              port: http
            initialDelaySeconds: 3
            periodSeconds: 5
          livenessProbe:
            httpGet:
              path: /healthz
              port: http
            initialDelaySeconds: 10
            periodSeconds: 10
---
apiVersion: v1
kind: Service
metadata:
  name: sample-flask
  namespace: sample-app
  labels:
    app: sample-flask
  annotations:
    # Optional: if you use the *non-operator* Prometheus Helm chart that scrapes via annotations
    prometheus.io/scrape: "true"
    prometheus.io/port: "8000"
    prometheus.io/path: "/metrics"
spec:
  selector:
    app: sample-flask
  ports:
    - name: http
      port: 8000
      targetPort: 8000
  type: ClusterIP
